
import pandas as pd
from pandas import DataFrame
from sklearn.cluster import KMeans
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pylab as pl
from sklearn import decomposition
from kneed import KneeLocator
from sklearn.manifold import TSNE

df = pd.read_excel (r'/Users/mitchellslapik/Downloads/UTH_Adults_ENBD_all.xlsx')

patients = df.loc[df['Group'] != 0]

GrayMatter = patients.loc[:, 'Left_Lateral_Ventricle':'CC_Anterior']
CranialVolume = patients.loc[:, 'EstimatedTotalIntraCranialVol_1']

GrayMatter = GrayMatter.dropna()
CranialVolume = CranialVolume.dropna()

Data = pd.concat([GrayMatter, CranialVolume], axis = 1, sort = False)

Data = Data.loc[:,'Left_Lateral_Ventricle':'CC_Anterior'].div(Data.EstimatedTotalIntraCranialVol_1, axis = 0)

tsne = TSNE(n_components=2, verbose=0, perplexity = 4, n_iter = 300)
pc = tsne.fit_transform(Data)


Nc = range(1, 20)
kmeans = [KMeans(n_clusters=i) for i in Nc]
score = [kmeans[i].fit(pc[:, 0:2]).score(pc[:, 0:2]) for i in range(len(kmeans))]
pl.plot(Nc,score)
pl.xlabel('Number of Clusters')
pl.ylabel('Score')
pl.title('Elbow Curve')

kn = KneeLocator(Nc, score, curve='concave', direction='increasing')
plt.scatter(kn.knee, score[kn.knee], c='red', s=50)
pl.show()


kmeans = KMeans(n_clusters=kn.knee).fit(pc[:, 0:2])
centroids = kmeans.cluster_centers_
print(centroids)

pl.title('t-SNE')
pl.xlabel('Dimension 1')
pl.ylabel('Dimension 2')

plt.scatter(pc[:,0], pc[:, 1], c= kmeans.labels_.astype(float), s=50, alpha=0.5)
plt.scatter(centroids[:, 0], centroids[:, 1], c='red', s=50)
plt.show()
